27/12/2022 – Script Python pour génération nouage de mots


Afin de pouvoir générer un nouage de mots pour chacune des langues traitées dans notre projet, nous avons écrit un script python que nous allons présenter dans cette section. 

Nous allons ici vous présenter étape par étape l’écriture de ce script python en éxpliquant la démarche et les choix éffectuées. 


1. Importations

Nous avons importé les librairies suivantes:

a. glob 

Glob nous permet de retourner tous les fichiers qui matchent un pattern spécifique. Cela est nécessaire afin de pouvoir faire lire au script tous les fichiers DUMPS-TEXT générés par notre script bash.


b. string

String nous fournira une simple liste des ponctuation qu’on eliminera par la suite après tokenisation. 


c. nltk

Nltk nous fourni la pluparts des fonctions dont on a besoin afin de normaliser les DUMPS-TEXT. En premier lieu on a téléchargé toutes les stopwords de toutes les langues du projet. Ensuite on a importé le lemmatiseur pour pouvoir éliminer par la suite les variations flexionnelles. 


d. WordCloud

WordCloud, très simplement, nous permettera de générer le nouge de mot à partir de l’ensemble des DUMPS-TEXT de chaque langue.


e. matplotlib

Matplotlib nous serviva pour la visualisation du nouage de mot crée par WordCloud.

##################IMAGE 1 - "1.WordCloud Article"########################



2. Normalisation

Avant de procéder à la normalisation de l’ensemble des DUMPS-TEXT, nous avons du crée une variable “all_texts” qui comporte tous le contenu des fichiers DUMPS-TEXT. Glob nous permet de recuperer tous les textes et une boucle “for” les ouvre et les concatène dans la variable “all_texts”.
Ensuite on tokenise “all_texts” et on enlève la punctuation et les stopwords sur la base de la langue choisie. Le resultat obtenu est une liste de lexèmes qui, par la suite, est lemmatisée à travers le “lemmatizer” precédemment initialisé. L’ensemble des mots lemmatisés est après uni sous une seule variable “joined_cleaned_doc”.

#################IMAGE 2 - "2.WordCloud Article"##########################



3. Génération du WordCloud

Finalement, la fonction “create_word_cloud” génère un nouage de mot à partir de “joined_cleaned_doc” avec des paramètres de visualisation que nous avons concordé. Avec matplotlib on va enfin pouvoir visualiser et sauvegarder l’image WordCloud générée.



#################IMAGE 3 - "3.WordCloud Article"##########################
